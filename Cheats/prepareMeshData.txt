    // precalulation of triangle normals and triangle areas
    private void prepareMeshData() {
	RTFile scene;

	System.out.println("Vorverarbeitung 1 l√§uft");

	float[] p1, p2, p3;

	for (int objectsNumber = 0; objectsNumber < objects.size(); objectsNumber++) {
	    scene = objects.get(objectsNumber);

	    if (scene.getHeader() == "TRIANGLE_MESH") {
		T_Mesh mesh = (T_Mesh) scene;

		// init memory
		mesh.triangleNormals = new float[mesh.triangles.length][3];
		mesh.triangleAreas = new float[mesh.triangles.length];

		for (int i = 0; i < mesh.triangles.length; i++) {
		    p1 = mesh.vertices[mesh.triangles[i][0]];
		    p2 = mesh.vertices[mesh.triangles[i][1]];
		    p3 = mesh.vertices[mesh.triangles[i][2]];

		    // calculate and store triangle normal n and triangle area a
		    mesh.triangleAreas[i] = calculateN(mesh.triangleNormals[i], p1, p2, p3);
		}
	    }
	}
	System.out.println("Vorverarbeitung 1 beendet");
    }